/*
# ===============================================================================
#                      PRIMARK
#
# ===============================================================================
# ===============================================================================
# File Name           : OLR1001.100.TRANS.sql
# Pattern             : 
# Purpose             : Insertion in TRANS table
# Author              : TERADATA
# File Type           : SQL
# Creation Date       : 2025-07-23
# -------------------------------------------------------------------------------
# Change History :
# Ver  | Date        |  Modified By           |  Change Description
# -------------------------------------------------------------------------------
# Automatically generated by 10cents_table_generator
# 1.0  | 2025-07-23 | TERADATA               |  INITIAL CODE
# Build Time 15:46:13
# 1.0  | 2025-07-23 | TERADATA               |  INITIAL CODE
*/


DELETE FROM DW${INSTANCE}T_TMP_ACC_FND.FND1041_VALID
;

.IF ERRORCODE <> 0 THEN .QUIT 101

/*----------------------------------------------------------------------------

# Insert into target table
# This step inserts data into the target table from the source table.
# It uses a left outer join to detect changes and only inserts records that are new or have changed.
# The control columns are set to indicate the effective date range and deletion status.
# The run_id and job_id are also set for tracking purposes.

-------------------------------------------------------------------------------*/

INSERT INTO DW${INSTANCE}T_TMP_ACC_FND.FND1041_VALID
(
    item_sbclas_wid, 
    pmk_co_cd, 
    pmk_co_vers_num, 
    dvisn_cd, 
    dvisn_vers_num, 
    dept_cd, 
    dept_vers_num, 
    item_clas_cd, 
    item_clas_vers_num, 
    pmk_item_sbclas_grp_cd, 
    pmk_item_sbclas_grp_vers_num, 
    item_sbclas_cd, 
    item_sbclas_vers_num, 
    /* Control Columnts */
    eff_from_dt,
    eff_to_dt,
    del_ind,
    run_id,
    update_run_id,
    job_id,
    update_job_id
)

SELECT
    TRANS.item_sbclas_wid, 
    TRANS.pmk_co_cd, 
    TRANS.pmk_co_vers_num, 
    TRANS.dvisn_cd, 
    TRANS.dvisn_vers_num, 
    TRANS.dept_cd, 
    TRANS.dept_vers_num, 
    TRANS.item_clas_cd, 
    TRANS.item_clas_vers_num, 
    TRANS.pmk_item_sbclas_grp_cd, 
    TRANS.pmk_item_sbclas_grp_vers_num, 
    TRANS.item_sbclas_cd, 
    TRANS.item_sbclas_vers_num, 
    /* Control Columnts */
    date '${EFF_FROM_DATE}' AS eff_from_dt,
    DATE '3500-12-31' AS eff_to_dt,
    0 AS del_ind,
    ${RUNID} AS run_id,
    NULL AS update_run_id,
    '${JOB}' AS job_id,
    NULL AS update_job_id
FROM DW${INSTANCE}T_TMP_ACC_FND.FND1041_TRANS AS TRANS
LEFT OUTER JOIN DW${INSTANCE}T_TMP_ACC_FND.FND_RECLASFCN_STYL_SBCLASS_VERS_XREF
 AS TRG
ON  TRG.eff_to_dt = DATE '3500-12-31' /* Current effective record */
AND TRG.del_ind = 0 /* Not deleted */
AND TRG.item_sbclas_wid = TRANS.item_sbclas_wid 
    
WHERE (  /* Change detection */ 
    TRG.del_ind IS NULL /* No existing or a deleted */
OR TRG.pmk_co_cd <> TRANS.pmk_co_cd 
OR (TRG.pmk_co_cd IS NULL AND TRANS.pmk_co_cd IS NOT NULL)
OR (TRG.pmk_co_cd IS NOT NULL AND TRANS.pmk_co_cd IS NULL)
    
OR TRG.pmk_co_vers_num <> TRANS.pmk_co_vers_num 
OR (TRG.pmk_co_vers_num IS NULL AND TRANS.pmk_co_vers_num IS NOT NULL)
OR (TRG.pmk_co_vers_num IS NOT NULL AND TRANS.pmk_co_vers_num IS NULL)
    
OR TRG.dvisn_cd <> TRANS.dvisn_cd 
OR (TRG.dvisn_cd IS NULL AND TRANS.dvisn_cd IS NOT NULL)
OR (TRG.dvisn_cd IS NOT NULL AND TRANS.dvisn_cd IS NULL)
    
OR TRG.dvisn_vers_num <> TRANS.dvisn_vers_num 
OR (TRG.dvisn_vers_num IS NULL AND TRANS.dvisn_vers_num IS NOT NULL)
OR (TRG.dvisn_vers_num IS NOT NULL AND TRANS.dvisn_vers_num IS NULL)
    
OR TRG.dept_cd <> TRANS.dept_cd 
OR (TRG.dept_cd IS NULL AND TRANS.dept_cd IS NOT NULL)
OR (TRG.dept_cd IS NOT NULL AND TRANS.dept_cd IS NULL)
    
OR TRG.dept_vers_num <> TRANS.dept_vers_num 
OR (TRG.dept_vers_num IS NULL AND TRANS.dept_vers_num IS NOT NULL)
OR (TRG.dept_vers_num IS NOT NULL AND TRANS.dept_vers_num IS NULL)
    
OR TRG.item_clas_cd <> TRANS.item_clas_cd 
OR (TRG.item_clas_cd IS NULL AND TRANS.item_clas_cd IS NOT NULL)
OR (TRG.item_clas_cd IS NOT NULL AND TRANS.item_clas_cd IS NULL)
    
OR TRG.item_clas_vers_num <> TRANS.item_clas_vers_num 
OR (TRG.item_clas_vers_num IS NULL AND TRANS.item_clas_vers_num IS NOT NULL)
OR (TRG.item_clas_vers_num IS NOT NULL AND TRANS.item_clas_vers_num IS NULL)
    
OR TRG.pmk_item_sbclas_grp_cd <> TRANS.pmk_item_sbclas_grp_cd 
OR (TRG.pmk_item_sbclas_grp_cd IS NULL AND TRANS.pmk_item_sbclas_grp_cd IS NOT NULL)
OR (TRG.pmk_item_sbclas_grp_cd IS NOT NULL AND TRANS.pmk_item_sbclas_grp_cd IS NULL)
    
OR TRG.pmk_item_sbclas_grp_vers_num <> TRANS.pmk_item_sbclas_grp_vers_num 
OR (TRG.pmk_item_sbclas_grp_vers_num IS NULL AND TRANS.pmk_item_sbclas_grp_vers_num IS NOT NULL)
OR (TRG.pmk_item_sbclas_grp_vers_num IS NOT NULL AND TRANS.pmk_item_sbclas_grp_vers_num IS NULL)
    
OR TRG.item_sbclas_cd <> TRANS.item_sbclas_cd 
OR (TRG.item_sbclas_cd IS NULL AND TRANS.item_sbclas_cd IS NOT NULL)
OR (TRG.item_sbclas_cd IS NOT NULL AND TRANS.item_sbclas_cd IS NULL)
    
OR TRG.item_sbclas_vers_num <> TRANS.item_sbclas_vers_num 
OR (TRG.item_sbclas_vers_num IS NULL AND TRANS.item_sbclas_vers_num IS NOT NULL)
OR (TRG.item_sbclas_vers_num IS NOT NULL AND TRANS.item_sbclas_vers_num IS NULL)
    
) /* end of change detection */

;

.IF ERRORCODE <> 0 THEN .QUIT 101

/*------------------------------------------------------------------------------------------

# Insert deleted records into the valid table 
# these are records which are not present in source / transformation table 

-------------------------------------------------------------------------------------------*/

INSERT INTO DW${INSTANCE}T_TMP_ACC_FND.FND1041_VALID
(
    item_sbclas_wid, 
    pmk_co_cd, 
    pmk_co_vers_num, 
    dvisn_cd, 
    dvisn_vers_num, 
    dept_cd, 
    dept_vers_num, 
    item_clas_cd, 
    item_clas_vers_num, 
    pmk_item_sbclas_grp_cd, 
    pmk_item_sbclas_grp_vers_num, 
    item_sbclas_cd, 
    item_sbclas_vers_num, 
    /* Control Columnts */
    eff_from_dt,
    eff_to_dt,
    del_ind,
    run_id,
    update_run_id,
    job_id,
    update_job_id
)

SELECT
    TRG.item_sbclas_wid, 
    TRG.pmk_co_cd, 
    TRG.pmk_co_vers_num, 
    TRG.dvisn_cd, 
    TRG.dvisn_vers_num, 
    TRG.dept_cd, 
    TRG.dept_vers_num, 
    TRG.item_clas_cd, 
    TRG.item_clas_vers_num, 
    TRG.pmk_item_sbclas_grp_cd, 
    TRG.pmk_item_sbclas_grp_vers_num, 
    TRG.item_sbclas_cd, 
    TRG.item_sbclas_vers_num, 
    /* Control Columnts */
    date '${EFF_FROM_DATE}' AS eff_from_dt,
    DATE '3500-12-31' AS eff_to_dt,
    1 AS del_ind, /* Mark as deleted */
    ${RUNID} AS run_id,
    NULL AS update_run_id,
    '${JOB}' AS job_id,
    NULL AS update_job_id
FROM DW${INSTANCE}T_TMP_ACC_FND.FND_RECLASFCN_STYL_SBCLASS_VERS_XREF
 AS TRG
LEFT OUTER JOIN DW${INSTANCE}T_TMP_ACC_FND.FND1041_TRANS AS TRANS
ON  TRG.eff_to_dt = DATE '3500-12-31' /* Current effective record */
AND TRG.item_sbclas_wid = TRANS.item_sbclas_wid 
    
WHERE TRANS.item_sbclass_wid is NULL /* No existing or a deleted */
;

.IF ERRORCODE <> 0 THEN .QUIT 101


/* End of step */