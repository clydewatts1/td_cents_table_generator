control_columns: .nan
job_name_from_file: FND1010
job_name_from_mapping: FND1010
mapping_columns:
- column_action: key
  column_order: nan
  column_sequence: 1
  column_sequence_reverse: 92
  source_column_name: ' TYCD.GREG_DT AS calendar_dt'
  target_column_name: calendar_dt
- column_action: nan
  column_order: nan
  column_sequence: 2
  column_sequence_reverse: 91
  source_column_name: TYYR.PMK_YR_STRT_DT AS year_start_dt
  target_column_name: year_start_dt
- column_action: nan
  column_order: nan
  column_sequence: 3
  column_sequence_reverse: 90
  source_column_name: TYYR.PMK_YR_END_DT AS year_end_dt
  target_column_name: year_end_dt
- column_action: nan
  column_order: nan
  column_sequence: 4
  column_sequence_reverse: 89
  source_column_name: TYPD.PMK_PRD_STRT_DT AS period_start_dt
  target_column_name: period_start_dt
- column_action: nan
  column_order: nan
  column_sequence: 5
  column_sequence_reverse: 88
  source_column_name: TYPD.PMK_PRD_END_DT AS period_end_dt
  target_column_name: period_end_dt
- column_action: nan
  column_order: nan
  column_sequence: 6
  column_sequence_reverse: 87
  source_column_name: TYWK.PMK_WK_STRT_DT AS week_start_dt
  target_column_name: week_start_dt
- column_action: nan
  column_order: nan
  column_sequence: 7
  column_sequence_reverse: 86
  source_column_name: TYWK.PMK_WK_END_DT AS week_end_dt
  target_column_name: week_end_dt
- column_action: nan
  column_order: nan
  column_sequence: 8
  column_sequence_reverse: 85
  source_column_name: TYCD.DY_OF_YR_NUM AS day_of_year_num
  target_column_name: day_of_year_num
- column_action: nan
  column_order: nan
  column_sequence: 9
  column_sequence_reverse: 84
  source_column_name: TYCD.DOM_NUM AS day_of_period_num
  target_column_name: day_of_period_num
- column_action: nan
  column_order: nan
  column_sequence: 10
  column_sequence_reverse: 83
  source_column_name: TYCD.DY_OF_WK_NUM AS day_of_week_num
  target_column_name: day_of_week_num
- column_action: nan
  column_order: nan
  column_sequence: 11
  column_sequence_reverse: 82
  source_column_name: TYWK.PMK_WK_OF_YR_NUM AS week_of_year_num
  target_column_name: week_of_year_num
- column_action: nan
  column_order: nan
  column_sequence: 12
  column_sequence_reverse: 81
  source_column_name: TYWK.PMK_WK_OF_PRD_NUM AS week_of_period_num
  target_column_name: week_of_period_num
- column_action: nan
  column_order: nan
  column_sequence: 13
  column_sequence_reverse: 80
  source_column_name: TYPD.PMK_PRD_OF_YR_NUM AS period_of_year_num
  target_column_name: period_of_year_num
- column_action: nan
  column_order: nan
  column_sequence: 14
  column_sequence_reverse: 79
  source_column_name: TYWK.CSTM_CAL_WK_ID  AS year_week
  target_column_name: year_week
- column_action: nan
  column_order: nan
  column_sequence: 15
  column_sequence_reverse: 78
  source_column_name: TYPD.CSTM_CAL_MTH_ID AS year_period
  target_column_name: year_period
- column_action: nan
  column_order: nan
  column_sequence: 16
  column_sequence_reverse: 77
  source_column_name: TYYR.CSTM_CAL_YR_ID AS year_num
  target_column_name: year_num
- column_action: nan
  column_order: nan
  column_sequence: 17
  column_sequence_reverse: 76
  source_column_name: SSN.season_code
  target_column_name: season_code
- column_action: nan
  column_order: nan
  column_sequence: 18
  column_sequence_reverse: 75
  source_column_name: SSN.season_name
  target_column_name: season_name
- column_action: nan
  column_order: nan
  column_sequence: 19
  column_sequence_reverse: 74
  source_column_name: SSN.season_description
  target_column_name: season_description
- column_action: nan
  column_order: nan
  column_sequence: 20
  column_sequence_reverse: 73
  source_column_name: SSN.season_map
  target_column_name: season_map
- column_action: nan
  column_order: nan
  column_sequence: 21
  column_sequence_reverse: 72
  source_column_name: SSN.season_wid
  target_column_name: season_wid
- column_action: nan
  column_order: nan
  column_sequence: 22
  column_sequence_reverse: 71
  source_column_name: LYCD.GREG_DT AS ly_calendar_dt
  target_column_name: ly_calendar_dt
- column_action: nan
  column_order: nan
  column_sequence: 23
  column_sequence_reverse: 70
  source_column_name: LYYR.PMK_YR_STRT_DT AS LY_Year_Start_Dt
  target_column_name: ly_year_start_dt
- column_action: nan
  column_order: nan
  column_sequence: 24
  column_sequence_reverse: 69
  source_column_name: LYYR.PMK_YR_END_DT AS LY_Year_End_Dt
  target_column_name: ly_year_end_dt
- column_action: nan
  column_order: nan
  column_sequence: 25
  column_sequence_reverse: 68
  source_column_name: LYPD.PMK_PRD_STRT_DT AS LY_Period_Start_Dt
  target_column_name: ly_period_start_dt
- column_action: nan
  column_order: nan
  column_sequence: 26
  column_sequence_reverse: 67
  source_column_name: LYPD.PMK_PRD_END_DT AS LY_Period_End_Dt
  target_column_name: ly_period_end_dt
- column_action: nan
  column_order: nan
  column_sequence: 27
  column_sequence_reverse: 66
  source_column_name: LYWK.PMK_WK_STRT_DT AS LY_Week_Start_Dt
  target_column_name: ly_week_start_dt
- column_action: nan
  column_order: nan
  column_sequence: 28
  column_sequence_reverse: 65
  source_column_name: LYWK.PMK_WK_END_DT AS LY_Week_End_Dt
  target_column_name: ly_week_end_dt
- column_action: nan
  column_order: nan
  column_sequence: 29
  column_sequence_reverse: 64
  source_column_name: LYCD.DY_OF_YR_NUM AS LY_Day_of_Year_Num
  target_column_name: ly_day_of_year_num
- column_action: nan
  column_order: nan
  column_sequence: 30
  column_sequence_reverse: 63
  source_column_name: LYCD.DOM_NUM AS LY_Day_of_Period_Num
  target_column_name: ly_day_of_period_num
- column_action: nan
  column_order: nan
  column_sequence: 31
  column_sequence_reverse: 62
  source_column_name: LYCD.DY_OF_WK_NUM AS LY_Day_of_Week_Num
  target_column_name: ly_day_of_week_num
- column_action: nan
  column_order: nan
  column_sequence: 32
  column_sequence_reverse: 61
  source_column_name: LYWK.PMK_WK_OF_YR_NUM AS LY_Week_of_Year_Num
  target_column_name: ly_week_of_year_num
- column_action: nan
  column_order: nan
  column_sequence: 33
  column_sequence_reverse: 60
  source_column_name: LYWK.PMK_WK_OF_PRD_NUM AS LY_Week_of_Period_Num
  target_column_name: ly_week_of_period_num
- column_action: nan
  column_order: nan
  column_sequence: 34
  column_sequence_reverse: 59
  source_column_name: LYPD.PMK_PRD_OF_YR_NUM AS LY_Period_of_Year_Num
  target_column_name: ly_period_of_year_num
- column_action: nan
  column_order: nan
  column_sequence: 35
  column_sequence_reverse: 58
  source_column_name: LYWK.CSTM_CAL_WK_ID  AS LY_Year_Week
  target_column_name: ly_year_week
- column_action: nan
  column_order: nan
  column_sequence: 36
  column_sequence_reverse: 57
  source_column_name: LYPD.CSTM_CAL_MTH_ID AS LY_Year_Period
  target_column_name: ly_year_period
- column_action: nan
  column_order: nan
  column_sequence: 37
  column_sequence_reverse: 56
  source_column_name: LYYR.CSTM_CAL_YR_ID AS LY_Year_Num
  target_column_name: ly_year_num
- column_action: nan
  column_order: nan
  column_sequence: 38
  column_sequence_reverse: 55
  source_column_name: LLYCD.GREG_DT AS LLY_Calendar_Dt
  target_column_name: lly_calendar_dt
- column_action: nan
  column_order: nan
  column_sequence: 39
  column_sequence_reverse: 54
  source_column_name: LLYYR.PMK_YR_STRT_DT AS LLY_Year_Start_Dt
  target_column_name: lly_year_start_dt
- column_action: nan
  column_order: nan
  column_sequence: 40
  column_sequence_reverse: 53
  source_column_name: LLYYR.PMK_YR_END_DT AS LLY_Year_End_Dt
  target_column_name: lly_year_end_dt
- column_action: nan
  column_order: nan
  column_sequence: 41
  column_sequence_reverse: 52
  source_column_name: LLYPD.PMK_PRD_STRT_DT AS LLY_Period_Start_Dt
  target_column_name: lly_period_start_dt
- column_action: nan
  column_order: nan
  column_sequence: 42
  column_sequence_reverse: 51
  source_column_name: LLYPD.PMK_PRD_END_DT AS LLY_Period_End_Dt
  target_column_name: lly_period_end_dt
- column_action: nan
  column_order: nan
  column_sequence: 43
  column_sequence_reverse: 50
  source_column_name: LLYWK.PMK_WK_STRT_DT AS LLY_Week_Start_Dt
  target_column_name: lly_week_start_dt
- column_action: nan
  column_order: nan
  column_sequence: 44
  column_sequence_reverse: 49
  source_column_name: LLYWK.PMK_WK_END_DT AS LLY_Week_End_Dt
  target_column_name: lly_week_end_dt
- column_action: nan
  column_order: nan
  column_sequence: 45
  column_sequence_reverse: 48
  source_column_name: LLYCD.DY_OF_YR_NUM AS LLY_Day_of_Year_Num
  target_column_name: lly_day_of_year_num
- column_action: nan
  column_order: nan
  column_sequence: 46
  column_sequence_reverse: 47
  source_column_name: LLYCD.DOM_NUM AS LLY_Day_of_Period_Num
  target_column_name: lly_day_of_period_num
- column_action: nan
  column_order: nan
  column_sequence: 47
  column_sequence_reverse: 46
  source_column_name: LLYCD.DY_OF_WK_NUM AS LLY_Day_of_Week_Num
  target_column_name: lly_day_of_week_num
- column_action: nan
  column_order: nan
  column_sequence: 48
  column_sequence_reverse: 45
  source_column_name: LLYWK.PMK_WK_OF_YR_NUM AS LLY_Week_of_Year_Num
  target_column_name: lly_week_of_year_num
- column_action: nan
  column_order: nan
  column_sequence: 49
  column_sequence_reverse: 44
  source_column_name: LLYWK.PMK_WK_OF_PRD_NUM AS LLY_Week_of_Period_Num
  target_column_name: lly_week_of_period_num
- column_action: nan
  column_order: nan
  column_sequence: 50
  column_sequence_reverse: 43
  source_column_name: LLYPD.PMK_PRD_OF_YR_NUM AS LLY_Period_of_Year_Num
  target_column_name: lly_period_of_year_num
- column_action: nan
  column_order: nan
  column_sequence: 51
  column_sequence_reverse: 42
  source_column_name: LLYWK.CSTM_CAL_WK_ID  AS LLY_Year_Week
  target_column_name: lly_year_week
- column_action: nan
  column_order: nan
  column_sequence: 52
  column_sequence_reverse: 41
  source_column_name: LLYPD.CSTM_CAL_MTH_ID AS LLY_Year_Period
  target_column_name: lly_year_period
- column_action: nan
  column_order: nan
  column_sequence: 53
  column_sequence_reverse: 40
  source_column_name: LLYYR.CSTM_CAL_YR_ID AS LLY_Year_Num
  target_column_name: lly_year_num
- column_action: nan
  column_order: nan
  column_sequence: 54
  column_sequence_reverse: 39
  source_column_name: '--- Last Last Last year'
  target_column_name: llly_calendar_dt
- column_action: nan
  column_order: nan
  column_sequence: 55
  column_sequence_reverse: 38
  source_column_name: LLLYCD.GREG_DT AS LLLY_Calendar_Dt
  target_column_name: llly_year_start_dt
- column_action: nan
  column_order: nan
  column_sequence: 56
  column_sequence_reverse: 37
  source_column_name: LLLYYR.PMK_YR_STRT_DT AS LLLY_Year_Start_Dt
  target_column_name: llly_year_end_dt
- column_action: nan
  column_order: nan
  column_sequence: 57
  column_sequence_reverse: 36
  source_column_name: LLLYYR.PMK_YR_END_DT AS LLLY_Year_End_Dt
  target_column_name: llly_period_start_dt
- column_action: nan
  column_order: nan
  column_sequence: 58
  column_sequence_reverse: 35
  source_column_name: LLLYPD.PMK_PRD_STRT_DT AS LLLY_Period_Start_Dt
  target_column_name: llly_period_end_dt
- column_action: nan
  column_order: nan
  column_sequence: 59
  column_sequence_reverse: 34
  source_column_name: LLLYPD.PMK_PRD_END_DT AS LLLY_Period_End_Dt
  target_column_name: llly_week_start_dt
- column_action: nan
  column_order: nan
  column_sequence: 60
  column_sequence_reverse: 33
  source_column_name: LLLYWK.PMK_WK_STRT_DT AS LLLY_Week_Start_Dt
  target_column_name: llly_week_end_dt
- column_action: nan
  column_order: nan
  column_sequence: 61
  column_sequence_reverse: 32
  source_column_name: LLLYWK.PMK_WK_END_DT AS LLLY_Week_End_Dt
  target_column_name: llly_day_of_year_num
- column_action: nan
  column_order: nan
  column_sequence: 62
  column_sequence_reverse: 31
  source_column_name: LLLYCD.DY_OF_YR_NUM AS LLLY_Day_of_Year_Num
  target_column_name: llly_day_of_period_num
- column_action: nan
  column_order: nan
  column_sequence: 63
  column_sequence_reverse: 30
  source_column_name: LLLYCD.DOM_NUM AS LLLY_Day_of_Period_Num
  target_column_name: llly_day_of_week_num
- column_action: nan
  column_order: nan
  column_sequence: 64
  column_sequence_reverse: 29
  source_column_name: LLLYCD.DY_OF_WK_NUM AS LLLY_Day_of_Week_Num
  target_column_name: llly_week_of_year_num
- column_action: nan
  column_order: nan
  column_sequence: 65
  column_sequence_reverse: 28
  source_column_name: LLLYWK.PMK_WK_OF_YR_NUM AS LLLY_Week_of_Year_Num
  target_column_name: llly_week_of_period_num
- column_action: nan
  column_order: nan
  column_sequence: 66
  column_sequence_reverse: 27
  source_column_name: LLLYWK.PMK_WK_OF_PRD_NUM AS LLLY_Week_of_Period_Num
  target_column_name: llly_period_of_year_num
- column_action: nan
  column_order: nan
  column_sequence: 67
  column_sequence_reverse: 26
  source_column_name: LLLYPD.PMK_PRD_OF_YR_NUM AS LLLY_Period_of_Year_Num
  target_column_name: llly_year_week
- column_action: nan
  column_order: nan
  column_sequence: 68
  column_sequence_reverse: 25
  source_column_name: LLLYWK.CSTM_CAL_WK_ID  AS LLLY_Year_Week
  target_column_name: llly_year_period
- column_action: nan
  column_order: nan
  column_sequence: 69
  column_sequence_reverse: 24
  source_column_name: LLLYPD.CSTM_CAL_MTH_ID AS LLLY_Year_Period
  target_column_name: llly_year_num
- column_action: nan
  column_order: nan
  column_sequence: 70
  column_sequence_reverse: 23
  source_column_name: LLLYYR.CSTM_CAL_YR_ID AS LLLY_Year_Num
  target_column_name: ny_calendar_dt
- column_action: nan
  column_order: nan
  column_sequence: 71
  column_sequence_reverse: 22
  source_column_name: NYCD.GREG_DT AS NY_Calendar_Dt
  target_column_name: ny_year_start_dt
- column_action: nan
  column_order: nan
  column_sequence: 72
  column_sequence_reverse: 21
  source_column_name: NYYR.PMK_YR_STRT_DT AS NY_Year_Start_Dt
  target_column_name: ny_year_end_dt
- column_action: nan
  column_order: nan
  column_sequence: 73
  column_sequence_reverse: 20
  source_column_name: NYYR.PMK_YR_END_DT AS NY_Year_End_Dt
  target_column_name: ny_period_start_dt
- column_action: nan
  column_order: nan
  column_sequence: 74
  column_sequence_reverse: 19
  source_column_name: NYPD.PMK_PRD_STRT_DT AS NY_Period_Start_Dt
  target_column_name: ny_period_end_dt
- column_action: nan
  column_order: nan
  column_sequence: 75
  column_sequence_reverse: 18
  source_column_name: NYPD.PMK_PRD_END_DT AS NY_Period_End_Dt
  target_column_name: ny_week_start_dt
- column_action: nan
  column_order: nan
  column_sequence: 76
  column_sequence_reverse: 17
  source_column_name: NYWK.PMK_WK_STRT_DT AS NY_Week_Start_Dt
  target_column_name: ny_week_end_dt
- column_action: nan
  column_order: nan
  column_sequence: 77
  column_sequence_reverse: 16
  source_column_name: NYWK.PMK_WK_END_DT AS NY_Week_End_Dt
  target_column_name: ny_day_of_year_num
- column_action: nan
  column_order: nan
  column_sequence: 78
  column_sequence_reverse: 15
  source_column_name: NYCD.DY_OF_YR_NUM AS NY_Day_of_Year_Num
  target_column_name: ny_day_of_period_num
- column_action: nan
  column_order: nan
  column_sequence: 79
  column_sequence_reverse: 14
  source_column_name: NYCD.DOM_NUM AS NY_Day_of_Period_Num
  target_column_name: ny_day_of_week_num
- column_action: nan
  column_order: nan
  column_sequence: 80
  column_sequence_reverse: 13
  source_column_name: NYCD.DY_OF_WK_NUM AS NY_Day_of_Week_Num
  target_column_name: ny_week_of_year_num
- column_action: nan
  column_order: nan
  column_sequence: 81
  column_sequence_reverse: 12
  source_column_name: NYWK.PMK_WK_OF_YR_NUM AS NY_Week_of_Year_Num
  target_column_name: ny_week_of_period_num
- column_action: nan
  column_order: nan
  column_sequence: 82
  column_sequence_reverse: 11
  source_column_name: NYWK.PMK_WK_OF_PRD_NUM AS NY_Week_of_Period_Num
  target_column_name: ny_period_of_year_num
- column_action: nan
  column_order: nan
  column_sequence: 83
  column_sequence_reverse: 10
  source_column_name: NYPD.PMK_PRD_OF_YR_NUM AS NY_Period_of_Year_Num
  target_column_name: ny_year_week
- column_action: nan
  column_order: nan
  column_sequence: 84
  column_sequence_reverse: 9
  source_column_name: NYWK.CSTM_CAL_WK_ID  AS NY_Year_Week
  target_column_name: ny_year_period
- column_action: nan
  column_order: nan
  column_sequence: 85
  column_sequence_reverse: 8
  source_column_name: NYPD.CSTM_CAL_MTH_ID AS NY_Year_Period
  target_column_name: ny_year_num
mapping_columns_count: 85
mapping_sheet_name: MAPPING
pattern: Staging
primary_key:
- calendar_dt
sql_steps:
  FND1010.300.TARGET: "/*\nThis query builds a comprehensive custom calendar dimension\
    \ table.\nIt gathers data for days, weeks, months, periods, and years, and then\n\
    joins them to create a record for each day with corresponding information\nfor\
    \ the current year (TY), last year (LY), the year before last (LLY), \nthree years\
    \ ago (LLLY), and the next year (NY). It also includes seasonal information.\n\
    */\n-- Common Table Expressions (CTEs) to pre-filter calendar tables for current\
    \ records.\nWITH\n  -- Day level calendar data\n  DY AS (\n    SELECT * FROM DW${INSTANCE}A_IDW.CSTM_CAL_DY\n\
    \    WHERE\n      cur_flg = 'Y'\n  ),\n  -- Week level calendar data\n  WK AS\
    \ (\n    SELECT * FROM DW${INSTANCE}A_IDW.CSTM_CAL_WK\n    WHERE\n      cur_flg\
    \ = 'Y'\n  ),\n  -- Month-Week mapping data\n  MT AS (\n    SELECT * FROM DW${INSTANCE}A_IDW.CSTM_CAL_MTH_WK\n\
    \    WHERE\n      cur_flg = 'Y'\n  ),\n  -- Period (Month) level calendar data\n\
    \  PD AS (\n    SELECT * FROM DW${INSTANCE}A_IDW.CSTM_CAL_MTH\n    WHERE\n   \
    \   cur_flg = 'Y'\n  ),\n  -- Year level calendar data\n  YR AS (\n    SELECT\
    \ * FROM DW${INSTANCE}A_IDW.CSTM_CAL_YR\n    WHERE\n      cur_flg = 'Y'\n  ),\n\
    \  -- Seasonal information based on Gregorian date\n  SSN AS (\n    SELECT\n \
    \     SSD.greg_dt AS calendar_dt,\n      SSD.sson_cd AS season_code,\n      SSN.sson_name\
    \ AS season_name,\n      -- Creates a more descriptive season name (e.g., \"2023\
    \ Spring Summer\")\n      SUBSTRING(season_name FROM 3 FOR 4) || ' ' || DECODE(\n\
    \        SUBSTRING(season_name FROM 1 FOR 2),\n        'AW', 'Autumn Winter',\n\
    \        'SS', 'Spring Summer',\n        'UA', 'Unknown 0',\n        season_name\n\
    \      ) AS season_description,\n      -- Creates a bitmap for the season\n  \
    \    SETBIT(\n        (CAST(TO_BYTES('0', 'base10') AS BYTE(14))),\n        SSD.sson_wid(SMALLINT)\n\
    \      ) AS season_map,\n      SSN.sson_wid AS season_wid\n    FROM\n      DW${INSTANCE}A_IDW.PMK_SSON_DAY\
    \ AS SSD\n      INNER JOIN DW${INSTANCE}A_IDW.SSON AS SSN ON SSD.sson_wid = SSN.sson_wid\n\
    \      AND SSD.cur_flg = 'Y'\n      AND SSN.cur_flg = 'Y'\n  )\n-- Main SELECT\
    \ statement to construct the final calendar dimension\nSELECT\n  -- This Year\
    \ (TY) columns\n  TYCD.greg_dt AS calendar_dt,\n  TYYR.pmk_yr_strt_dt AS year_start_dt,\n\
    \  TYYR.pmk_yr_end_dt AS year_end_dt,\n  TYPD.pmk_prd_strt_dt AS period_start_dt,\n\
    \  TYPD.pmk_prd_end_dt AS period_end_dt,\n  TYWK.pmk_wk_strt_dt AS week_start_dt,\n\
    \  TYWK.pmk_wk_end_dt AS week_end_dt,\n  TYCD.dy_of_yr_num AS day_of_year_num,\n\
    \  TYCD.dom_num AS day_of_period_num,\n  TYCD.dy_of_wk_num AS day_of_week_num,\n\
    \  TYWK.pmk_wk_of_yr_num AS week_of_year_num,\n  COALESCE(TYWK.pmk_wk_of_prd_num,0)\
    \ AS week_of_period_num,\n  TYPD.pmk_prd_of_yr_num AS period_of_year_num,\n  TYWK.cstm_cal_wk_id\
    \ AS year_week,\n  TYPD.cstm_cal_mth_id AS year_period,\n  TYYR.cstm_cal_yr_id\
    \ AS year_num,\n  -- Season columns\n  SSN.season_code,\n  SSN.season_name,\n\
    \  SSN.season_description,\n  SSN.season_map,\n  SSN.season_wid,\n  -- Last Year\
    \ (LY) columns\n  LYCD.greg_dt AS ly_calendar_dt,\n  LYYR.pmk_yr_strt_dt AS ly_year_start_dt,\n\
    \  LYYR.pmk_yr_end_dt AS ly_year_end_dt,\n  LYPD.pmk_prd_strt_dt AS ly_period_start_dt,\n\
    \  LYPD.pmk_prd_end_dt AS ly_period_end_dt,\n  LYWK.pmk_wk_strt_dt AS ly_week_start_dt,\n\
    \  LYWK.pmk_wk_end_dt AS ly_week_end_dt,\n  LYCD.dy_of_yr_num AS ly_day_of_year_num,\n\
    \  LYCD.dom_num AS ly_day_of_period_num,\n  LYCD.dy_of_wk_num AS ly_day_of_week_num,\n\
    \  LYWK.pmk_wk_of_yr_num AS ly_week_of_year_num,\n  LYWK.pmk_wk_of_prd_num AS\
    \ ly_week_of_period_num,\n  LYPD.pmk_prd_of_yr_num AS ly_period_of_year_num,\n\
    \  LYWK.cstm_cal_wk_id AS ly_year_week,\n  LYPD.cstm_cal_mth_id AS ly_year_period,\n\
    \  LYYR.cstm_cal_yr_id AS ly_year_num,\n  -- Last Last Year (LLY) columns\n  LLYCD.greg_dt\
    \ AS lly_calendar_dt,\n  LLYYR.pmk_yr_strt_dt AS lly_year_start_dt,\n  LLYYR.pmk_yr_end_dt\
    \ AS lly_year_end_dt,\n  LLYPD.pmk_prd_strt_dt AS lly_period_start_dt,\n  LLYPD.pmk_prd_end_dt\
    \ AS lly_period_end_dt,\n  LLYWK.pmk_wk_strt_dt AS lly_week_start_dt,\n  LLYWK.pmk_wk_end_dt\
    \ AS lly_week_end_dt,\n  LLYCD.dy_of_yr_num AS lly_day_of_year_num,\n  LLYCD.dom_num\
    \ AS lly_day_of_period_num,\n  LLYCD.dy_of_wk_num AS lly_day_of_week_num,\n  LLYWK.pmk_wk_of_yr_num\
    \ AS lly_week_of_year_num,\n  LLYWK.pmk_wk_of_prd_num AS lly_week_of_period_num,\n\
    \  LLYPD.pmk_prd_of_yr_num AS lly_period_of_year_num,\n  LLYWK.cstm_cal_wk_id\
    \ AS lly_year_week,\n  LLYPD.cstm_cal_mth_id AS lly_year_period,\n  LLYYR.cstm_cal_yr_id\
    \ AS lly_year_num,\n  -- Last Last Last year (LLLY) columns\n  LLLYCD.greg_dt\
    \ AS llly_calendar_dt,\n  LLLYYR.pmk_yr_strt_dt AS llly_year_start_dt,\n  LLLYYR.pmk_yr_end_dt\
    \ AS llly_year_end_dt,\n  LLLYPD.pmk_prd_strt_dt AS llly_period_start_dt,\n  LLLYPD.pmk_prd_end_dt\
    \ AS llly_period_end_dt,\n  LLLYWK.pmk_wk_strt_dt AS llly_week_start_dt,\n  LLLYWK.pmk_wk_end_dt\
    \ AS llly_week_end_dt,\n  LLLYCD.dy_of_yr_num AS llly_day_of_year_num,\n  LLLYCD.dom_num\
    \ AS llly_day_of_period_num,\n  LLLYCD.dy_of_wk_num AS llly_day_of_week_num,\n\
    \  LLLYWK.pmk_wk_of_yr_num AS llly_week_of_year_num,\n  LLLYWK.pmk_wk_of_prd_num\
    \ AS llly_week_of_period_num,\n  LLLYPD.pmk_prd_of_yr_num AS llly_period_of_year_num,\n\
    \  LLLYWK.cstm_cal_wk_id AS llly_year_week,\n  LLLYPD.cstm_cal_mth_id AS llly_year_period,\n\
    \  LLLYYR.cstm_cal_yr_id AS llly_year_num,\n  -- Next Year (NY) columns\n  NYCD.greg_dt\
    \ AS ny_calendar_dt,\n  NYYR.pmk_yr_strt_dt AS ny_year_start_dt,\n  NYYR.pmk_yr_end_dt\
    \ AS ny_year_end_dt,\n  NYPD.pmk_prd_strt_dt AS ny_period_start_dt,\n  NYPD.pmk_prd_end_dt\
    \ AS ny_period_end_dt,\n  NYWK.pmk_wk_strt_dt AS ny_week_start_dt,\n  NYWK.pmk_wk_end_dt\
    \ AS ny_week_end_dt,\n  NYCD.dy_of_yr_num AS ny_day_of_year_num,\n  NYCD.dom_num\
    \ AS ny_day_of_period_num,\n  NYCD.dy_of_wk_num AS ny_day_of_week_num,\n  NYWK.pmk_wk_of_yr_num\
    \ AS ny_week_of_year_num,\n  NYWK.pmk_wk_of_prd_num AS ny_week_of_period_num,\n\
    \  NYPD.pmk_prd_of_yr_num AS ny_period_of_year_num,\n  NYWK.cstm_cal_wk_id AS\
    \ ny_year_week,\n  NYPD.cstm_cal_mth_id AS ny_year_period,\n  NYYR.cstm_cal_yr_id\
    \ AS ny_year_num\nFROM\n  -- Start with the Day table for the current year (TYCD)\n\
    \  DY AS TYCD\n  -- Join to get the corresponding day for the previous year (LYCD)\n\
    \  LEFT OUTER JOIN DY AS LYCD ON TYCD.pmk_prior_cal_dy_wid = LYCD.cstm_cal_dy_wid\n\
    \  -- Join to get the corresponding day for two years ago (LLYCD)\n  LEFT OUTER\
    \ JOIN DY AS LLYCD ON LYCD.pmk_prior_cal_dy_wid = LLYCD.cstm_cal_dy_wid\n  --\
    \ Join to get the corresponding day for three years ago (LLLYCD)\n  LEFT OUTER\
    \ JOIN DY AS LLLYCD ON LLYCD.pmk_prior_cal_dy_wid = LLLYCD.cstm_cal_dy_wid\n \
    \ -- Join to get the corresponding day for the next year (NYCD)\n  LEFT OUTER\
    \ JOIN DY AS NYCD ON TYCD.pmk_prior_cal_dy_wid = NYCD.cstm_cal_dy_wid\n  /* Join\
    \ to Week level for all years */\n  LEFT OUTER JOIN WK AS TYWK ON TYCD.cstm_cal_wk_wid\
    \ = TYWK.cstm_cal_wk_wid\n  LEFT OUTER JOIN WK AS LYWK ON LYCD.cstm_cal_wk_wid\
    \ = LYWK.cstm_cal_wk_wid\n  LEFT OUTER JOIN WK AS LLYWK ON LLYCD.cstm_cal_wk_wid\
    \ = LLYWK.cstm_cal_wk_wid\n  LEFT OUTER JOIN WK AS LLLYWK ON LLLYCD.cstm_cal_wk_wid\
    \ = LLLYWK.cstm_cal_wk_wid\n  LEFT OUTER JOIN WK AS NYWK ON NYCD.cstm_cal_wk_wid\
    \ = NYWK.cstm_cal_wk_wid\n  /* Join to Month-Week mapping for all years */\n \
    \ LEFT OUTER JOIN MT AS TYMT ON TYWK.cstm_cal_wk_wid = TYMT.cstm_cal_wk_wid\n\
    \  LEFT OUTER JOIN MT AS LYMT ON LYWK.cstm_cal_wk_wid = LYMT.cstm_cal_wk_wid\n\
    \  LEFT OUTER JOIN MT AS LLYMT ON LLYWK.cstm_cal_wk_wid = LLYMT.cstm_cal_wk_wid\n\
    \  LEFT OUTER JOIN MT AS LLLYMT ON LLLYWK.cstm_cal_wk_wid = LLLYMT.cstm_cal_wk_wid\n\
    \  LEFT OUTER JOIN MT AS NYMT ON NYWK.cstm_cal_wk_wid = NYMT.cstm_cal_wk_wid\n\
    \  /* Join to Period (Month) level for all years */\n  LEFT OUTER JOIN PD AS TYPD\
    \ ON TYMT.cstm_cal_prd_wid = TYPD.cstm_cal_prd_wid\n  LEFT OUTER JOIN PD AS LYPD\
    \ ON LYMT.cstm_cal_prd_wid = LYPD.cstm_cal_prd_wid\n  LEFT OUTER JOIN PD AS LLYPD\
    \ ON LLYMT.cstm_cal_prd_wid = LLYPD.cstm_cal_prd_wid\n  LEFT OUTER JOIN PD AS\
    \ LLLYPD ON LLLYMT.cstm_cal_prd_wid = LLLYPD.cstm_cal_prd_wid\n  LEFT OUTER JOIN\
    \ PD AS NYPD ON NYMT.cstm_cal_prd_wid = NYPD.cstm_cal_prd_wid\n  /* Join to Year\
    \ level for all years */\n  LEFT OUTER JOIN YR AS TYYR ON TYPD.cstm_cal_yr_wid\
    \ = TYYR.cstm_cal_yr_wid\n  LEFT OUTER JOIN YR AS LYYR ON LYPD.cstm_cal_yr_wid\
    \ = LYYR.cstm_cal_yr_wid\n  LEFT OUTER JOIN YR AS LLYYR ON LLYPD.cstm_cal_yr_wid\
    \ = LLYYR.cstm_cal_yr_wid\n  LEFT OUTER JOIN YR AS LLLYYR ON LLLYPD.cstm_cal_yr_wid\
    \ = LLLYYR.cstm_cal_yr_wid\n  LEFT OUTER JOIN YR AS NYYR ON NYPD.cstm_cal_yr_wid\
    \ = NYYR.cstm_cal_yr_wid\n  /* Join to Seasonal data */\n  LEFT OUTER JOIN SSN\
    \ ON SSN.calendar_dt = TYCD.greg_dt"
steps:
- description: ''
  file_name: ''
  file_present: false
  job_name: FND1010
  notes: ''
  post_sql: ''
  pre_sql: ''
  reverse_sequence_no: 3
  sequence_no: 1
  source_database: ''
  source_table: ''
  sql_statement: '/* ERROR : no steps found for this step */'
  stats: ''
  step_pattern: STANDARD_START
  steps: Start
  target_database: ''
  target_table: ''
- description: This will do a insert into target table based on mapping
  file_name: FND1010.300.TARGET.sql
  file_present: true
  job_name: FND1010
  notes: ''
  post_sql: ''
  pre_sql: ''
  reverse_sequence_no: 2
  sequence_no: 2
  source_database: See Mapping
  source_table: ''
  sql_statement: "/*\nThis query builds a comprehensive custom calendar dimension\
    \ table.\nIt gathers data for days, weeks, months, periods, and years, and then\n\
    joins them to create a record for each day with corresponding information\nfor\
    \ the current year (TY), last year (LY), the year before last (LLY), \nthree years\
    \ ago (LLLY), and the next year (NY). It also includes seasonal information.\n\
    */\n-- Common Table Expressions (CTEs) to pre-filter calendar tables for current\
    \ records.\nWITH\n  -- Day level calendar data\n  DY AS (\n    SELECT * FROM DW${INSTANCE}A_IDW.CSTM_CAL_DY\n\
    \    WHERE\n      cur_flg = 'Y'\n  ),\n  -- Week level calendar data\n  WK AS\
    \ (\n    SELECT * FROM DW${INSTANCE}A_IDW.CSTM_CAL_WK\n    WHERE\n      cur_flg\
    \ = 'Y'\n  ),\n  -- Month-Week mapping data\n  MT AS (\n    SELECT * FROM DW${INSTANCE}A_IDW.CSTM_CAL_MTH_WK\n\
    \    WHERE\n      cur_flg = 'Y'\n  ),\n  -- Period (Month) level calendar data\n\
    \  PD AS (\n    SELECT * FROM DW${INSTANCE}A_IDW.CSTM_CAL_MTH\n    WHERE\n   \
    \   cur_flg = 'Y'\n  ),\n  -- Year level calendar data\n  YR AS (\n    SELECT\
    \ * FROM DW${INSTANCE}A_IDW.CSTM_CAL_YR\n    WHERE\n      cur_flg = 'Y'\n  ),\n\
    \  -- Seasonal information based on Gregorian date\n  SSN AS (\n    SELECT\n \
    \     SSD.greg_dt AS calendar_dt,\n      SSD.sson_cd AS season_code,\n      SSN.sson_name\
    \ AS season_name,\n      -- Creates a more descriptive season name (e.g., \"2023\
    \ Spring Summer\")\n      SUBSTRING(season_name FROM 3 FOR 4) || ' ' || DECODE(\n\
    \        SUBSTRING(season_name FROM 1 FOR 2),\n        'AW', 'Autumn Winter',\n\
    \        'SS', 'Spring Summer',\n        'UA', 'Unknown 0',\n        season_name\n\
    \      ) AS season_description,\n      -- Creates a bitmap for the season\n  \
    \    SETBIT(\n        (CAST(TO_BYTES('0', 'base10') AS BYTE(14))),\n        SSD.sson_wid(SMALLINT)\n\
    \      ) AS season_map,\n      SSN.sson_wid AS season_wid\n    FROM\n      DW${INSTANCE}A_IDW.PMK_SSON_DAY\
    \ AS SSD\n      INNER JOIN DW${INSTANCE}A_IDW.SSON AS SSN ON SSD.sson_wid = SSN.sson_wid\n\
    \      AND SSD.cur_flg = 'Y'\n      AND SSN.cur_flg = 'Y'\n  )\n-- Main SELECT\
    \ statement to construct the final calendar dimension\nSELECT\n  -- This Year\
    \ (TY) columns\n  TYCD.greg_dt AS calendar_dt,\n  TYYR.pmk_yr_strt_dt AS year_start_dt,\n\
    \  TYYR.pmk_yr_end_dt AS year_end_dt,\n  TYPD.pmk_prd_strt_dt AS period_start_dt,\n\
    \  TYPD.pmk_prd_end_dt AS period_end_dt,\n  TYWK.pmk_wk_strt_dt AS week_start_dt,\n\
    \  TYWK.pmk_wk_end_dt AS week_end_dt,\n  TYCD.dy_of_yr_num AS day_of_year_num,\n\
    \  TYCD.dom_num AS day_of_period_num,\n  TYCD.dy_of_wk_num AS day_of_week_num,\n\
    \  TYWK.pmk_wk_of_yr_num AS week_of_year_num,\n  COALESCE(TYWK.pmk_wk_of_prd_num,0)\
    \ AS week_of_period_num,\n  TYPD.pmk_prd_of_yr_num AS period_of_year_num,\n  TYWK.cstm_cal_wk_id\
    \ AS year_week,\n  TYPD.cstm_cal_mth_id AS year_period,\n  TYYR.cstm_cal_yr_id\
    \ AS year_num,\n  -- Season columns\n  SSN.season_code,\n  SSN.season_name,\n\
    \  SSN.season_description,\n  SSN.season_map,\n  SSN.season_wid,\n  -- Last Year\
    \ (LY) columns\n  LYCD.greg_dt AS ly_calendar_dt,\n  LYYR.pmk_yr_strt_dt AS ly_year_start_dt,\n\
    \  LYYR.pmk_yr_end_dt AS ly_year_end_dt,\n  LYPD.pmk_prd_strt_dt AS ly_period_start_dt,\n\
    \  LYPD.pmk_prd_end_dt AS ly_period_end_dt,\n  LYWK.pmk_wk_strt_dt AS ly_week_start_dt,\n\
    \  LYWK.pmk_wk_end_dt AS ly_week_end_dt,\n  LYCD.dy_of_yr_num AS ly_day_of_year_num,\n\
    \  LYCD.dom_num AS ly_day_of_period_num,\n  LYCD.dy_of_wk_num AS ly_day_of_week_num,\n\
    \  LYWK.pmk_wk_of_yr_num AS ly_week_of_year_num,\n  LYWK.pmk_wk_of_prd_num AS\
    \ ly_week_of_period_num,\n  LYPD.pmk_prd_of_yr_num AS ly_period_of_year_num,\n\
    \  LYWK.cstm_cal_wk_id AS ly_year_week,\n  LYPD.cstm_cal_mth_id AS ly_year_period,\n\
    \  LYYR.cstm_cal_yr_id AS ly_year_num,\n  -- Last Last Year (LLY) columns\n  LLYCD.greg_dt\
    \ AS lly_calendar_dt,\n  LLYYR.pmk_yr_strt_dt AS lly_year_start_dt,\n  LLYYR.pmk_yr_end_dt\
    \ AS lly_year_end_dt,\n  LLYPD.pmk_prd_strt_dt AS lly_period_start_dt,\n  LLYPD.pmk_prd_end_dt\
    \ AS lly_period_end_dt,\n  LLYWK.pmk_wk_strt_dt AS lly_week_start_dt,\n  LLYWK.pmk_wk_end_dt\
    \ AS lly_week_end_dt,\n  LLYCD.dy_of_yr_num AS lly_day_of_year_num,\n  LLYCD.dom_num\
    \ AS lly_day_of_period_num,\n  LLYCD.dy_of_wk_num AS lly_day_of_week_num,\n  LLYWK.pmk_wk_of_yr_num\
    \ AS lly_week_of_year_num,\n  LLYWK.pmk_wk_of_prd_num AS lly_week_of_period_num,\n\
    \  LLYPD.pmk_prd_of_yr_num AS lly_period_of_year_num,\n  LLYWK.cstm_cal_wk_id\
    \ AS lly_year_week,\n  LLYPD.cstm_cal_mth_id AS lly_year_period,\n  LLYYR.cstm_cal_yr_id\
    \ AS lly_year_num,\n  -- Last Last Last year (LLLY) columns\n  LLLYCD.greg_dt\
    \ AS llly_calendar_dt,\n  LLLYYR.pmk_yr_strt_dt AS llly_year_start_dt,\n  LLLYYR.pmk_yr_end_dt\
    \ AS llly_year_end_dt,\n  LLLYPD.pmk_prd_strt_dt AS llly_period_start_dt,\n  LLLYPD.pmk_prd_end_dt\
    \ AS llly_period_end_dt,\n  LLLYWK.pmk_wk_strt_dt AS llly_week_start_dt,\n  LLLYWK.pmk_wk_end_dt\
    \ AS llly_week_end_dt,\n  LLLYCD.dy_of_yr_num AS llly_day_of_year_num,\n  LLLYCD.dom_num\
    \ AS llly_day_of_period_num,\n  LLLYCD.dy_of_wk_num AS llly_day_of_week_num,\n\
    \  LLLYWK.pmk_wk_of_yr_num AS llly_week_of_year_num,\n  LLLYWK.pmk_wk_of_prd_num\
    \ AS llly_week_of_period_num,\n  LLLYPD.pmk_prd_of_yr_num AS llly_period_of_year_num,\n\
    \  LLLYWK.cstm_cal_wk_id AS llly_year_week,\n  LLLYPD.cstm_cal_mth_id AS llly_year_period,\n\
    \  LLLYYR.cstm_cal_yr_id AS llly_year_num,\n  -- Next Year (NY) columns\n  NYCD.greg_dt\
    \ AS ny_calendar_dt,\n  NYYR.pmk_yr_strt_dt AS ny_year_start_dt,\n  NYYR.pmk_yr_end_dt\
    \ AS ny_year_end_dt,\n  NYPD.pmk_prd_strt_dt AS ny_period_start_dt,\n  NYPD.pmk_prd_end_dt\
    \ AS ny_period_end_dt,\n  NYWK.pmk_wk_strt_dt AS ny_week_start_dt,\n  NYWK.pmk_wk_end_dt\
    \ AS ny_week_end_dt,\n  NYCD.dy_of_yr_num AS ny_day_of_year_num,\n  NYCD.dom_num\
    \ AS ny_day_of_period_num,\n  NYCD.dy_of_wk_num AS ny_day_of_week_num,\n  NYWK.pmk_wk_of_yr_num\
    \ AS ny_week_of_year_num,\n  NYWK.pmk_wk_of_prd_num AS ny_week_of_period_num,\n\
    \  NYPD.pmk_prd_of_yr_num AS ny_period_of_year_num,\n  NYWK.cstm_cal_wk_id AS\
    \ ny_year_week,\n  NYPD.cstm_cal_mth_id AS ny_year_period,\n  NYYR.cstm_cal_yr_id\
    \ AS ny_year_num\nFROM\n  -- Start with the Day table for the current year (TYCD)\n\
    \  DY AS TYCD\n  -- Join to get the corresponding day for the previous year (LYCD)\n\
    \  LEFT OUTER JOIN DY AS LYCD ON TYCD.pmk_prior_cal_dy_wid = LYCD.cstm_cal_dy_wid\n\
    \  -- Join to get the corresponding day for two years ago (LLYCD)\n  LEFT OUTER\
    \ JOIN DY AS LLYCD ON LYCD.pmk_prior_cal_dy_wid = LLYCD.cstm_cal_dy_wid\n  --\
    \ Join to get the corresponding day for three years ago (LLLYCD)\n  LEFT OUTER\
    \ JOIN DY AS LLLYCD ON LLYCD.pmk_prior_cal_dy_wid = LLLYCD.cstm_cal_dy_wid\n \
    \ -- Join to get the corresponding day for the next year (NYCD)\n  LEFT OUTER\
    \ JOIN DY AS NYCD ON TYCD.pmk_prior_cal_dy_wid = NYCD.cstm_cal_dy_wid\n  /* Join\
    \ to Week level for all years */\n  LEFT OUTER JOIN WK AS TYWK ON TYCD.cstm_cal_wk_wid\
    \ = TYWK.cstm_cal_wk_wid\n  LEFT OUTER JOIN WK AS LYWK ON LYCD.cstm_cal_wk_wid\
    \ = LYWK.cstm_cal_wk_wid\n  LEFT OUTER JOIN WK AS LLYWK ON LLYCD.cstm_cal_wk_wid\
    \ = LLYWK.cstm_cal_wk_wid\n  LEFT OUTER JOIN WK AS LLLYWK ON LLLYCD.cstm_cal_wk_wid\
    \ = LLLYWK.cstm_cal_wk_wid\n  LEFT OUTER JOIN WK AS NYWK ON NYCD.cstm_cal_wk_wid\
    \ = NYWK.cstm_cal_wk_wid\n  /* Join to Month-Week mapping for all years */\n \
    \ LEFT OUTER JOIN MT AS TYMT ON TYWK.cstm_cal_wk_wid = TYMT.cstm_cal_wk_wid\n\
    \  LEFT OUTER JOIN MT AS LYMT ON LYWK.cstm_cal_wk_wid = LYMT.cstm_cal_wk_wid\n\
    \  LEFT OUTER JOIN MT AS LLYMT ON LLYWK.cstm_cal_wk_wid = LLYMT.cstm_cal_wk_wid\n\
    \  LEFT OUTER JOIN MT AS LLLYMT ON LLLYWK.cstm_cal_wk_wid = LLLYMT.cstm_cal_wk_wid\n\
    \  LEFT OUTER JOIN MT AS NYMT ON NYWK.cstm_cal_wk_wid = NYMT.cstm_cal_wk_wid\n\
    \  /* Join to Period (Month) level for all years */\n  LEFT OUTER JOIN PD AS TYPD\
    \ ON TYMT.cstm_cal_prd_wid = TYPD.cstm_cal_prd_wid\n  LEFT OUTER JOIN PD AS LYPD\
    \ ON LYMT.cstm_cal_prd_wid = LYPD.cstm_cal_prd_wid\n  LEFT OUTER JOIN PD AS LLYPD\
    \ ON LLYMT.cstm_cal_prd_wid = LLYPD.cstm_cal_prd_wid\n  LEFT OUTER JOIN PD AS\
    \ LLLYPD ON LLLYMT.cstm_cal_prd_wid = LLLYPD.cstm_cal_prd_wid\n  LEFT OUTER JOIN\
    \ PD AS NYPD ON NYMT.cstm_cal_prd_wid = NYPD.cstm_cal_prd_wid\n  /* Join to Year\
    \ level for all years */\n  LEFT OUTER JOIN YR AS TYYR ON TYPD.cstm_cal_yr_wid\
    \ = TYYR.cstm_cal_yr_wid\n  LEFT OUTER JOIN YR AS LYYR ON LYPD.cstm_cal_yr_wid\
    \ = LYYR.cstm_cal_yr_wid\n  LEFT OUTER JOIN YR AS LLYYR ON LLYPD.cstm_cal_yr_wid\
    \ = LLYYR.cstm_cal_yr_wid\n  LEFT OUTER JOIN YR AS LLLYYR ON LLLYPD.cstm_cal_yr_wid\
    \ = LLLYYR.cstm_cal_yr_wid\n  LEFT OUTER JOIN YR AS NYYR ON NYPD.cstm_cal_yr_wid\
    \ = NYYR.cstm_cal_yr_wid\n  /* Join to Seasonal data */\n  LEFT OUTER JOIN SSN\
    \ ON SSN.calendar_dt = TYCD.greg_dt"
  stats: INDEX(calendar_dt)
  step_pattern: STANDARD_DELETE_INSERT
  steps: '300'
  target_database: T_TMP_ACC_FND
  target_table: FND1010_DW_FND_DATE_DIM
- description: ''
  file_name: ''
  file_present: false
  job_name: FND1010
  notes: ''
  post_sql: ''
  pre_sql: ''
  reverse_sequence_no: 1
  sequence_no: 3
  source_database: ''
  source_table: ''
  sql_statement: '/* ERROR : no steps found for this step */'
  stats: ''
  step_pattern: STANDARD_END
  steps: End
  target_database: ''
  target_table: ''
target_database_name: T_TMP_ACC_FND
target_table_name: FND1010_DW_FND_DATE_DIM
transformation_key:
- calendar_dt
