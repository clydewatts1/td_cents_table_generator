/*
# ===============================================================================
#                      PRIMARK
#
# ===============================================================================
# ===============================================================================
# File Name           : OLR1001.100.TRANS.sql
# Pattern             : {{ step.pattern }}
# Purpose             : Insertion in TRANS table
# Author              : TERADATA
# File Type           : SQL
# Creation Date       : {{step.build_date}}
# -------------------------------------------------------------------------------
# Change History :
# Ver  | Date        |  Modified By           |  Change Description
# -------------------------------------------------------------------------------
# Automatically generated by 10cents_table_generator
# 1.0  | {{step.build_date}} | TERADATA               |  INITIAL CODE
# Build Time {{ step.build_time }}
# 1.0  | {{step.build_date}} | TERADATA               |  INITIAL CODE
*/

BEGIN TRANSACTION
;
.IF ERRORCODE <> 0 THEN .QUIT 101

/* Lock target table */
LOCKING DW${INSTANCE}{{step.target_database}}.{{ step.target_table }} FOR WRITE
;
.IF ERRORCODE <> 0 THEN .QUIT 101

/* Update the target table by closing of the previous records */
UPDATE TRG FROM  DW${INSTANCE}{{step.target_database}}.{{ step.target_table }} AS TRG
                ,DW${INSTANCE}{{step.source_database}}.{{ step.source_table }} AS SRC
SET eff_to_dt = date '${EFF_FROM}' 
  , update_job_id = '${JOB}'
  , update_run_id = '${RUN_ID}'
WHERE TRG.eff_to_dt = '9999-12-31'
AND eff_from_dt < date '${EFF_FROM}'
    {%- for column in mapping.mapping_columns%}
    {%- if column.column_action in ('key') %}
AND TRG.{{ column.target_column_name }} = TRANS.{{ column.source_column_name }} 
    {% endif %}
    {%- endfor %}
;
.IF ERRORCODE <> 0 THEN .QUIT 101

/* INSERT INTO target table */
INSERT INTO DW${INSTANCE}{{step.target_database}}.{{ step.target_table }}
(
    {%- for column in mapping.mapping_columns%}
    {% if column.column_action not in ('mapping','ignore')%}{{ column.target_column_name }}{% endif %}{% if not loop.last %}, {%else%}, {% endif %}
    {%- endfor %}
    /* Control Columns */
    eff_from_dt,
    eff_to_dt,
    del_ind,
    run_id,
    update_run_id,
    job_id,
    update_job_id
)
{% if step.file_present == True%}{{step.sql_statement}}{% endif %}
SELECT
    {%- for column in mapping.mapping_columns%}
    {% if column.column_action not in ('mapping','ignore')%}SRC.{{ column.target_column_name }} AS {{ column.target_column_name }}
    {%- endif %}
    {%- endfor %}
    SRC.eff_from_dt,
    SRC.eff_to_dt,
    SRC.del_ind,
    SRC.run_id,
    SRC.update_run_id,
    SRC.job_id,
    SRC.update_job_id
FROM DW${INSTANCE}{{step.source_database}}.{{ step.source_table }} AS SRC
;
.IF ERRORCODE <> 0 THEN .QUIT 101

/* End of INSERT statement */


END TRANSACTION
.IF ERRORCODE <> 0 THEN .QUIT 101