/*
# ===============================================================================
#                      PRIMARK
#
# ===============================================================================
# ===============================================================================
# File Name           : OLR1001.100.TRANS.sql
# Pattern             : {{ step.pattern }}
# Purpose             : Insertion in TRANS table
# Author              : TERADATA
# File Type           : SQL
# Creation Date       : {{step.build_date}}
# -------------------------------------------------------------------------------
# Change History :
# Ver  | Date        |  Modified By           |  Change Description
# -------------------------------------------------------------------------------
# Automatically generated by 10cents_table_generator
# 1.0  | {{step.build_date}} | TERADATA               |  INITIAL CODE
# Build Time {{ step.build_time }}
# 1.0  | {{step.build_date}} | TERADATA               |  INITIAL CODE
*/


DELETE FROM DW${INSTANCE}{{step.target_database}}.{{ step.target_table }}
;

.IF ERRORCODE <> 0 THEN .QUIT 101

/*----------------------------------------------------------------------------

# Insert into target table
# This step inserts data into the target table from the source table.
# It uses a left outer join to detect changes and only inserts records that are new or have changed.
# The control columns are set to indicate the effective date range and deletion status.
# The run_id and job_id are also set for tracking purposes.

-------------------------------------------------------------------------------*/

INSERT INTO DW${INSTANCE}{{step.target_database}}.{{ step.target_table }}
(
    {%- for column in mapping.mapping_columns%}
    {% if column.column_action not in ('mapping','ignore')%}{{ column.target_column_name }}{% endif %}{% if not loop.last %}, {%else%}, {% endif %}
    {%- endfor %}
    /* Control Columnts */
    eff_from_dt,
    eff_to_dt,
    del_ind,
    run_id,
    update_run_id,
    job_id,
    update_job_id
)
{% if step.file_present == True%}{{step.sql_statement}}
{% else %}
SELECT
    {%- for column in mapping.mapping_columns%}
    {% if column.column_action not in ('mapping','ignore')%}TRANS.{{ column.target_column_name }}{% endif %}{% if not loop.last %}, {%else%}, {% endif %}
    {%- endfor %}
    /* Control Columnts */
    date '${EFF_FROM}' AS eff_from_dt,
    DATE '9999-12-31' AS eff_to_dt,
    0 AS del_ind,
    ${RUNID} AS run_id,
    NULL AS update_run_id,
    '${JOB}' AS job_id,
    NULL AS update_job_id
FROM DW${INSTANCE}{{step.source_database}}.{{ step.source_table }} AS TRANS
LEFT OUTER JOIN DW${INSTANCE}{{mapping.target_database}}.{{ mapping.target_table }} AS TRG
ON  TRG.eff_to_dt = DATE '9999-12-31' /* Current effective record */
AND TRG.del_ind = 0 /* Not deleted */
    {%- for column in mapping.mapping_columns%}
    {%- if column.column_action in ('key') %}
AND TRG.{{ column.target_column_name }} = TRANS.{{ column.source_column_name }} 
    {% endif %}
    {%- endfor %}
WHERE (  /* Change detection */ 
    TRG.del_ind IS NULL /* No existing or a deleted */
    {%- for column in mapping.mapping_columns%}
    {%- if column.column_action in ('nan','') or column.column_action == None %}
OR TRG.{{ column.target_column_name }} <> TRANS.{{ column.source_column_name }} 
OR (TRG.{{ column.target_column_name }} IS NULL AND TRANS.{{ column.source_column_name }} IS NOT NULL)
OR (TRG.{{ column.target_column_name }} IS NOT NULL AND TRANS.{{ column.source_column_name }} IS NULL)
    {% endif %}

    {%- endfor %}
) /* end of change detection */

;
{% endif %}
.IF ERRORCODE <> 0 THEN .QUIT 101

/*------------------------------------------------------------------------------------------

# Insert deleted records into the valid table 
# these are records which are not present in source / transformation table 

-------------------------------------------------------------------------------------------*/

INSERT INTO DW${INSTANCE}{{step.target_database}}.{{ step.target_table }}
(
    {%- for column in mapping.mapping_columns%}
    {% if column.column_action not in ('mapping','ignore')%}{{ column.target_column_name }}{% endif %}{% if not loop.last %}, {%else%}, {% endif %}
    {%- endfor %}
    /* Control Columnts */
    eff_from_dt,
    eff_to_dt,
    del_ind,
    run_id,
    update_run_id,
    job_id,
    update_job_id
)
{% if step.file_present == True%}{{step.sql_statement}}
{% else %}
SELECT
    {%- for column in mapping.mapping_columns%}
    {% if column.column_action not in ('mapping','ignore')%}TRG.{{ column.target_column_name }}{% endif %}{% if not loop.last %}, {%else%}, {% endif %}
    {%- endfor %}
    /* Control Columnts */
    date '${EFF_FROM}' AS eff_from_dt,
    DATE '9999-12-31' AS eff_to_dt,
    1 AS del_ind, /* Mark as deleted */
    ${RUNID} AS run_id,
    NULL AS update_run_id,
    '${JOB}' AS job_id,
    NULL AS update_job_id
FROM DW${INSTANCE}{{mapping.target_database}}.{{ mapping.target_table }} AS TRG
LEFT OUTER JOIN DW${INSTANCE}{{step.source_database}}.{{ step.source_table }} AS TRANS
ON  TRG.eff_to_dt = DATE '9999-12-31' /* Current effective record */
    {%- for column in mapping.mapping_columns%}
    {%- if column.column_action in ('key') %}
AND TRG.{{ column.target_column_name }} = TRANS.{{ column.source_column_name }} 
    {% endif %}
    {%- endfor %}
WHERE TRANS.del_ind is NULL /* No existing or a deleted */
;
{% endif %}
.IF ERRORCODE <> 0 THEN .QUIT 101
/* End of step */

{% if step.stats != None and step.stats != ''%}

/* Collect statistics for the table */
COLLECT STATISTICS {{step.stats}} ON DW${INSTANCE}{{step.target_database}}.{{ step.target_table }}
;
.IF ERRORCODE <> 0 THEN .QUIT 101

{% endif %}
/* End of step */
